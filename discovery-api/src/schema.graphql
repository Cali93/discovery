# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """JWT access token"""
  accessToken: String!

  """JWT refresh token"""
  refreshToken: String!
  user: User!
}

type AuthToken {
  """JWT access token"""
  accessToken: String!

  """JWT refresh token"""
  refreshToken: String!
}

type Category {
  """Identifies the date and time when the object was created."""
  createdAt: Date!
  description: String!
  id: ID!
  name: String!
  parentCategory: Category!
  projectCount: Int!
  projects: [Project!]
  slug: String!
  subcategories: [Category!]

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

input CreateResourceInput {
  content: String!
  published: Boolean = false
  title: String!
  type: String!
}

"""Date custom scalar type"""
scalar Date

input LogoutInput {
  accessToken: String!
  ethAddresses: [String!]!
}

type Mutation {
  changePassword(data: ChangePasswordInput!): User!
  createResource(data: CreateResourceInput!): Resource!
  deleteUser(data: LogoutInput!): Int!
  login(data: SignupInput!): Auth!
  logout(data: LogoutInput!): Int!
  refreshToken(token: String!): AuthToken!
  signup(data: SignupInput!): Auth!
  updateUser(data: UpdateUserInput!): User!
}

"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  asc
  desc
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Project {
  categories: [Category!]!

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  description: String!
  github: String
  id: ID!
  logo: String
  name: String!
  token: Token
  tokenId: String
  twitter: String

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
  website: String!
}

type Query {
  getCategories: [Category!]!
  getDeFiProjects: [Project!]!
  getProjectById(id: String!): Project!
  hello(name: String!): String!
  helloWorld: String!
  me: User!
  publishedResources(after: String, before: String, first: Int, last: Int, orderBy: ResourceOrder, query: String, skip: Int): ResourceConnection!
  resource(resourceId: String!): Resource!
  userResources(userId: String!): [Resource!]!
}

type Resource {
  author: User!
  content: String!

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  id: ID!
  published: Boolean!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

type ResourceConnection {
  edges: [ResourceEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type ResourceEdge {
  cursor: String!
  node: Resource!
}

input ResourceOrder {
  direction: OrderDirection!
  field: ResourceOrderField!
}

"""Properties by which resource connections can be ordered."""
enum ResourceOrderField {
  content
  createdAt
  id
  published
  title
  updatedAt
}

"""User role"""
enum Role {
  ADMIN
  CREATOR
  USER
}

input SignupInput {
  ethAddresses: [String!]
}

type Subscription {
  projectCreated: Project!
  resourceCreated: Resource!
}

type Token {
  id: String!
  name: String!
  priceUSDT: String!
  symbol: String!
  tradeVolume: String!
}

input UpdateUserInput {
  ens: String
  ethAddress: String
}

type User {
  """Identifies the date and time when the object was created."""
  createdAt: Date!
  email: String!
  firstname: String
  id: ID!
  lastname: String
  resources: [Resource!]!
  role: Role!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}
